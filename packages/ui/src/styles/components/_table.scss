table {
  table-layout: fixed;
}

table.table-lg {
  // stylelint-disable-next-line selector-max-universal
  > :not(caption) > * > * {
    padding: 1rem 1rem;
  }
}

.table-spinner {
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
}

.table-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.sticky-header {
  position: sticky;
  top: 0;
  z-index: 2;
}

.table-sort-icon {
  margin-top: 6px;
  padding-left: 8px;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.filter-input {
  flex: 1 1 auto;
  width: 1%;
}

[data-pc-section="headercheckbox.icon"], [data-pc-section="rowcheckbox.icon"] {
  display: none;
}

[data-pc-name="rowradiobutton"] > [data-pc-section="input"] {
  @extend .form-check-input;
}

.page-size {
  min-width: 70px;
}

.pagination .page-link.active {
  z-index: 0;
}

.pagination .page-link:disabled {
  border-color: $gray-300;
  color: $gray-400;
  pointer-events: none;
}

.column-customiser {
  min-width: 180px !important;
}

@each $color, $value in $base-colors {
  .forge-table-#{$color} {
    & .page-link {
      color: $value;
      
      &.active {
        background-color: $value;
        border-color: $value;
        color: white;
      }
    }
    
    .table-bordered > thead > tr {
      
      &:first-child {
        border: 1px solid $table-border-color;
        border-bottom: 0
      }
      
      &:last-child {
        border: 1px solid $table-border-color;
        border-top: 0
      }

    }

    thead > tr {
      @if ($color == "brand") {
        border-color: $brand-shade-1
      } @else {
        border-color: map-get($subtle-colors, $color + "-subtle")
      }
      
      & > th {
        @if($color == "brand") {
          background-color: $brand-shade-1
        } @else {
          background-color: map-get($subtle-colors, $color + "-subtle")
        }
      }
    }
    
    .table-hover > tbody > tr:hover > * {
      @if ($color == "brand") {
        background-color: $brand-shade-1
      } @else {
        background-color: map-get($subtle-colors, $color + "-subtle")
      }
    }
  }
}