@function getHoverColour($color) {
  @if $color == danger {
    @return #F9D9D5;
  } @else if $color == warning {
    @return #FFEFCF;
  } @else if $color == success {
    @return #C3E7D5;
  } @else if $color == success-alternate {
    @return #EFFFC7;
  } @else if $color == secondary {
    @return #E5E5E5;
  } @else if $color == brand {
    @return map-get($subtle-colors, "brand-shade-2")
  } @else {
    @return #B9D5E7;
  }
}

@each $color, $value in $base-colors {
  .tile-#{$color} {
    @if $color == brand {
      background-color: map-get($subtle-colors, $color + "-shade-1") !important;
    } @else {
      background-color: map-get($subtle-colors, $color + "-subtle") !important;
    }

    color: $black !important;
    text-align: start !important;
    border: none;

    &.tile-bar-top {
      @extend .rounded-top;
      border: none;
      border-top: 8px solid map-get($base-colors, $color) !important;
    }

    &.tile-bar-left {
      @extend .rounded-start;
      border: none;
      border-left: 8px solid map-get($base-colors, $color) !important;
    }

    &.selected {
      border: 2px solid;
      border-color: map-get($base-colors, $color) !important;
    }
  }

  .btn.btn-#{$color}.tile-#{$color} {
    border-color: map-get($subtle-colors, $color + "-subtle");
    &:hover {
      background-color: getHoverColour($color) !important;
    }

    &:active {
      background-color: map-get($subtle-colors, $color + "-subtle") !important;
    }

    &:focus {
      background-color: map-get($subtle-colors, $color + "-subtle") !important;
    }
  }
}